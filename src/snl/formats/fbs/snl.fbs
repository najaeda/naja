namespace SNL.FBS;

enum TermDirection:byte { Input=0, Output, InOut }

table ScalarTerm {
  id:uint = 0;
  name:string;
  direction:TermDirection = Input;
}

table BusTerm {
  id:uint = 0;
  name:string;
  direction:TermDirection = Input;
  msb:int;
  lsb:int;
}

union Term { ScalarTerm, BusTerm }

struct DesignID {
  db_id:byte;
  library_id:ushort;
  design_id:uint;
}

table Instance {
  model:DesignID;
}

enum DesignType:byte { Standard=0, Blackbox, Primitive }

table DesignInterface {
  id:uint = 0;
  name:string;
  type:DesignType = Standard;
  terms:[Term];
}

table DesignImplementation {
  instances:[Instance];
}

enum LibraryType:byte { Standard=0, Primitives }

table Library {
  id:ushort = 0; 
  name:string;
  type:LibraryType = Standard;
  libraries:[Library];
  design_interfaces:[DesignInterface];
  design_implementations:[DesignImplementation];
}

table DB {
  id:byte = 1;
  libraries:[Library];
}

root_type DB;