# Workflow to build and test wheels
name: najaeda Wheel builder

on:
  push:
    branches:
      - main
      # Release branches
      #- "[0-9]+.[0-9]+.X"
  pull_request:
    branches:
      - main
      #- "[0-9]+.[0-9]+.X"
  # Manual run
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04] #, macos-13]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.22.0
  
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse

      #Reminder!!: actions/upload-artifact and actions/download-artifact
      #need to have same version
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ runner.os }} #-${{ matrix.cibw_archs }}
          path: ./wheelhouse/*.whl
          if-no-files-found: error
  
  test_upload_pypi:
    # TODO: create an sdist that can build without a custom environment
    needs: [build_wheels]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        buildplat:
          - [manylinux_x86_64]
          # - [macos-13, macosx_x86_64]
            #- [ubuntu-20.04, musllinux_x86_64]
            #- [windows-2019, win_amd64]
        #python: ["cp39", "cp310", "cp311", "cp312"]  # "pp39"
        python: ["cp310"]  # "pp39"
        #exclude:
        #  # Don't build PyPy 32-bit windows
        #  - buildplat: [windows-2019, win32]
        #    python: "pp39"
        #  - buildplat: [ ubuntu-20.04, musllinux_x86_64 ]
        #    python: "pp39"

    #environment: pypi
    permissions:
      id-token: write
    steps:
      #Reminder!!: actions/upload-artifact and actions/download-artifact
      #need to have same version
      - uses: actions/download-artifact@v4
        with:
          name: cibw-wheels-${{ runner.os }} #-${{ matrix.cibw_archs }}
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.12.2
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/


  #pypi-publish:
  #  name: Upload release to PyPI
  #  runs-on: ubuntu-latest
  #  environment:
  #    name: pypi
  #    url: https://pypi.org/najaeda/naja
  #  permissions:
  #    id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
  #  steps:
  #  # retrieve your distributions here

  #  - name: Publish package distributions to PyPI
  #    uses: pypa/gh-action-pypi-publish@release/v1
